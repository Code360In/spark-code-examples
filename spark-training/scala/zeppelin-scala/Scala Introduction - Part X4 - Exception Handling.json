{"paragraphs":[{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669058367_49374647","id":"20180310-080418_1670284278","dateCreated":"2018-03-10T08:04:18+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:1972","text":"%md\n# Exception Handling\n\nScala also supports exceptions as we know from Java. The main difference is that for handling different exceptions, Scala again uses Pattern Matching.","dateUpdated":"2018-03-10T08:05:20+0000","dateFinished":"2018-03-10T08:05:20+0000","dateStarted":"2018-03-10T08:05:20+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Exception Handling</h1>\n<p>Scala also supports exceptions as we know from Java. The main difference is that for handling different exceptions, Scala again uses Pattern Matching.</p>\n</div>"}]}},{"text":"try {\n    1 / 0\n} catch {\n    case ex:java.lang.ArithmeticException => println(\"Arithmetic Problem\")\n    case ex:java.lang.Exception => println(\"Other problem\"); throw ex;\n}","user":"anonymous","dateUpdated":"2018-03-10T08:05:35+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669077621_-110280822","id":"20180310-080437_106670629","dateCreated":"2018-03-10T08:04:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2037","dateFinished":"2018-03-10T08:05:35+0000","dateStarted":"2018-03-10T08:05:35+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Arithmetic Problem\nres65: AnyVal = ()\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669132079_631423112","id":"20180310-080532_966643577","dateCreated":"2018-03-10T08:05:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2129","text":"try {\n    1 / 0\n} catch {\n    case ex:java.lang.ArithmeticException => println(\"Arithmetic Problem\")\n    case ex:java.lang.Exception => println(\"Other problem\"); throw ex;\n} finally {\n    println(\"Cleaning up\")\n}","dateUpdated":"2018-03-10T08:05:37+0000","dateFinished":"2018-03-10T08:05:37+0000","dateStarted":"2018-03-10T08:05:37+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Arithmetic Problem\nCleaning up\nres66: AnyVal = ()\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"markdown","editOnDblClick":true},"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669137416_-1187685012","id":"20180310-080537_1688803212","dateCreated":"2018-03-10T08:05:37+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2210","text":"%md\n# Using Try\n\nIn addition to the imperative exception handling mechanism, Scala also offers a more functional approach using `Try` (with a captibal `T`). The `Try` class is modeled like a collection (although it actually does not implement a collection interface)","dateUpdated":"2018-03-10T08:14:52+0000","dateFinished":"2018-03-10T08:14:52+0000","dateStarted":"2018-03-10T08:14:52+0000","results":{"code":"SUCCESS","msg":[{"type":"HTML","data":"<div class=\"markdown-body\">\n<h1>Using Try</h1>\n<p>In addition to the imperative exception handling mechanism, Scala also offers a more functional approach using <code>Try</code> (with a captibal <code>T</code>). The <code>Try</code> class is modeled like a collection (although it actually does not implement a collection interface)</p>\n</div>"}]}},{"text":"import scala.util.Try\nimport scala.util.Failure\nimport scala.util.Success\n\ndef divide(x:Int,y:Int) : Try[Int] = Try { x/y }\n\ndef printResult(result:Try[Int]) = result match {\n    case Success(x) => println(s\"Result is $x\")\n    case Failure(e) => println(s\"Error: $e\")\n}","user":"anonymous","dateUpdated":"2018-03-10T08:10:40+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669216742_-1313174450","id":"20180310-080656_675006472","dateCreated":"2018-03-10T08:06:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2292","dateFinished":"2018-03-10T08:10:20+0000","dateStarted":"2018-03-10T08:10:19+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import scala.util.Try\ndivide: (x: Int, y: Int)scala.util.Try[Int]\nprintResult: (result: scala.util.Try[Int])Unit\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669224349_65780932","id":"20180310-080704_1541485057","dateCreated":"2018-03-10T08:07:04+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2365","text":"val result = divide(1,3)\nprintResult(result)","dateUpdated":"2018-03-10T08:11:24+0000","dateFinished":"2018-03-10T08:11:25+0000","dateStarted":"2018-03-10T08:11:24+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"result: scala.util.Try[Int] = Success(0)\nResult is 0\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669351723_-729358771","id":"20180310-080911_2114533137","dateCreated":"2018-03-10T08:09:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2494","text":"val result = divide(1,0)\nprintResult(result)","dateUpdated":"2018-03-10T08:11:28+0000","dateFinished":"2018-03-10T08:11:29+0000","dateStarted":"2018-03-10T08:11:28+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"result: scala.util.Try[Int] = Failure(java.lang.ArithmeticException: / by zero)\nResult is 0\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669488969_-1497101393","id":"20180310-081128_500615239","dateCreated":"2018-03-10T08:11:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2697","text":"val result = divide(5,2).map(_*3)\nresult.foreach(println)","dateUpdated":"2018-03-10T08:12:28+0000","dateFinished":"2018-03-10T08:12:28+0000","dateStarted":"2018-03-10T08:12:28+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"result: scala.util.Try[Int] = Success(6)\n6\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669516696_863980014","id":"20180310-081156_914207536","dateCreated":"2018-03-10T08:11:56+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2778","text":"val result = divide(5,0).map(_*3)\nresult.foreach(println)","dateUpdated":"2018-03-10T08:12:35+0000","dateFinished":"2018-03-10T08:12:36+0000","dateStarted":"2018-03-10T08:12:35+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"result: scala.util.Try[Int] = Failure(java.lang.ArithmeticException: / by zero)\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669531587_-148294343","id":"20180310-081211_639098382","dateCreated":"2018-03-10T08:12:11+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2883","text":"val result = divide(5,2).map(_/0)","dateUpdated":"2018-03-10T08:15:45+0000","dateFinished":"2018-03-10T08:15:13+0000","dateStarted":"2018-03-10T08:15:12+0000","results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"result: scala.util.Try[Int] = Failure(java.lang.ArithmeticException: / by zero)\n"}]}},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1520669712778_-464883035","id":"20180310-081512_1976526865","dateCreated":"2018-03-10T08:15:12+0000","status":"READY","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:3041"}],"name":"Scala Introduction - Part X4 - Exception Handling","id":"2D7Y3CY8Z","angularObjects":{"2D98FMAH1:shared_process":[],"2D7JMBHMW:shared_process":[],"2D97KQQMQ:shared_process":[],"2D75J9G8A:shared_process":[],"2D7EN88U2:shared_process":[],"2D9JW72F7:shared_process":[],"2D833H41P:shared_process":[],"2D9GNB6ZN:shared_process":[],"2D6C3QSGG:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}
