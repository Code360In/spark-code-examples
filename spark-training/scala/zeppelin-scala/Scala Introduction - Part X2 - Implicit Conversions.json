{"paragraphs":[{"text":"%md\n# Implicit Conversions\n\nScala has a magical feature that allows to add new functionality to existing classes without actually changing these classes. This is implemented by providing *implicit conversion* from one class to a different one with new methods. This conversion is considered whenever a method is called on an instance of the original class, but the method actually is not defined in the original class. If the following two conditions are true\n\n* An implicit conversion exists from the original object type to some other class\n* The other class provides the method in question\nThen the object will be converted to the other class and the method will be called. \n\nThis mechanism is used for the so called *Pimp-my-Library-Pattern* which allows non-invasive extension of existing libraries or classes.","dateUpdated":"2018-11-12T17:59:17+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045532754_-222332958","id":"20180321-182032_60977499","dateCreated":"2018-11-12T17:58:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:26993","user":"anonymous","dateFinished":"2018-11-12T17:59:17+0000","dateStarted":"2018-11-12T17:59:17+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h1>Implicit Conversions</h1>\n<p>Scala has a magical feature that allows to add new functionality to existing classes without actually changing these classes. This is implemented by providing <em>implicit conversion</em> from one class to a different one with new methods. This conversion is considered whenever a method is called on an instance of the original class, but the method actually is not defined in the original class. If the following two conditions are true</p>\n<ul>\n  <li>An implicit conversion exists from the original object type to some other class</li>\n  <li>The other class provides the method in question<br/>Then the object will be converted to the other class and the method will be called.</li>\n</ul>\n<p>This mechanism is used for the so called <em>Pimp-my-Library-Pattern</em> which allows non-invasive extension of existing libraries or classes.</p>\n</div>"}},{"text":"%md\n## Method 1: Implicit class\n\nThe first example uses an *implicit class* which provides a constructor which will be considered for performing a conversion of a different class instance to the implicit class (`StringHolder` in the following example).\n\nWhenever you try to call a method that does not exist in a class, the Scala compiler will look for implicit conversions that provide a path to the missing method (in this case the method `funny`).","dateUpdated":"2018-11-12T18:01:17+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045532754_-222332958","id":"20180321-182626_1961885237","dateCreated":"2018-11-12T17:58:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26994","user":"anonymous","dateFinished":"2018-11-12T18:01:17+0000","dateStarted":"2018-11-12T18:01:17+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h2>Method 1: Implicit class</h2>\n<p>The first example uses an <em>implicit class</em> which provides a constructor which will be considered for performing a conversion of a different class instance to the implicit class (<code>StringHolder</code> in the following example).</p>\n<p>Whenever you try to call a method that does not exist in a class, the Scala compiler will look for implicit conversions that provide a path to the missing method (in this case the method <code>funny</code>).</p>\n</div>"}},{"text":"object StringExt {\n    // Provide an implicit class, which will work as an implicit conversion\n    implicit class StringHolder(str:String) {\n        def funny= str.map(x => if (scala.util.Random.nextBoolean()) x.toUpper else x.toLower)\n    }\n}","dateUpdated":"2018-11-12T17:58:52+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045532755_-222717707","id":"20180321-182016_715758456","dateCreated":"2018-11-12T17:58:52+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:26995"},{"config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/markdown","editorHide":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045679682_1289142967","id":"20181112-180119_1028583214","dateCreated":"2018-11-12T18:01:19+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:27713","text":"%md\nAlthough the `String` class itself does not provide a method called `funny`, we can now call this method with any String. Under the hood, Scala will create a temporary instance of the `StringHolder` class, and then invoke the `funny` method on that instance.","user":"anonymous","dateUpdated":"2018-11-12T18:02:24+0000","dateFinished":"2018-11-12T18:02:24+0000","dateStarted":"2018-11-12T18:02:24+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<p>Although the <code>String</code> class itself does not provide a method called <code>funny</code>, we can now call this method with any String. Under the hood, Scala will create a temporary instance of the <code>StringHolder</code> class, and then invoke the <code>funny</code> method on that instance.</p>\n</div>"}},{"text":"import StringExt._\n\n\"Hello\".funny","dateUpdated":"2018-11-12T17:58:52+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045532755_-222717707","id":"20180321-182029_231638466","dateCreated":"2018-11-12T17:58:52+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:26996"},{"text":"%md\n## Method 2: Implicit function\n\nIt is also possible to decouple the definition of the extension class (`FunnyStringHolder` in the following example) and the implicit converstion to that class by providing an *implicit conversion function*:","dateUpdated":"2018-11-12T18:03:19+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045532756_-224641452","id":"20180321-182645_428001114","dateCreated":"2018-11-12T17:58:52+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:26997","user":"anonymous","dateFinished":"2018-11-12T18:03:19+0000","dateStarted":"2018-11-12T18:03:19+0000","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h2>Method 2: Implicit function</h2>\n<p>It is also possible to decouple the definition of the extension class (<code>FunnyStringHolder</code> in the following example) and the implicit converstion to that class by providing an <em>implicit conversion function</em>:</p>\n</div>"}},{"text":"class FunnyStringHolder(str:String) {\n    def superFunny = str.map(x => if (scala.util.Random.nextBoolean()) x.toUpper else x.toLower).reverse\n}\n\nobject StringOps {\n    implicit def toFunnyStringHolder(str:String) = new FunnyStringHolder(str)\n}","dateUpdated":"2018-11-12T17:58:52+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045532756_-224641452","id":"20180321-182053_274231010","dateCreated":"2018-11-12T17:58:52+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:26998"},{"text":"import StringOps._\n\n\"Hello World\".superFunny","dateUpdated":"2018-11-12T17:58:52+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045532756_-224641452","id":"20180321-182117_318702452","dateCreated":"2018-11-12T17:58:52+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:26999"},{"dateUpdated":"2018-11-12T17:59:05+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","results":{},"enabled":true,"editorSetting":{"language":"scala","editOnDblClick":false},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045532757_-225026201","id":"20180321-182711_581419157","dateCreated":"2018-11-12T17:58:52+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:27000","text":""}],"name":"Scala Introduction - Part X2 - Implicit Conversions","id":"2DVZGKWAH","angularObjects":{"2DU4EM1QC:shared_process":[],"2DWH63KTX:shared_process":[],"2DTY3NN2K:shared_process":[],"2DTW2RFCG:shared_process":[],"2DUQAGCKJ:shared_process":[],"2DWWDB4VQ:shared_process":[],"2DV7ZN8WX:shared_process":[],"2DWF6XUFU:shared_process":[],"2DVE9GW7A:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}
