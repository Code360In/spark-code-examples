{"paragraphs":[{"text":"%md\n# Return Statements are Evil!\nThis notebook tries to demonstrate why Scala programs often don't make much use of return statements and why it is highly discouraged to do otherwise.","dateUpdated":"2018-11-12T17:57:19+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355645_-190492389","id":"20160620-190251_1678678789","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h1>Return Statements are Evil!</h1>\n<p>This notebook tries to demonstrate why Scala programs often don&rsquo;t make much use of return statements and why it is highly discouraged to do otherwise.</p>\n</div>"},"dateCreated":"2018-11-12T17:55:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:25527","user":"anonymous","dateFinished":"2018-11-12T17:57:19+0000","dateStarted":"2018-11-12T17:57:19+0000"},{"text":"val numbers = Array(11,23,34,46,56)","dateUpdated":"2018-11-12T17:55:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355646_-189338142","id":"20160620-185833_1614598848","result":{"code":"SUCCESS","type":"TEXT","msg":"numbers: Array[Int] = Array(11, 23, 34, 46, 56)\n"},"dateCreated":"2018-11-12T17:55:55+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25528"},{"text":"%md\n### 1 Traditional add\nFirst let us define a small method called \"add\", without using `return`. Everything will work out fine.","dateUpdated":"2018-11-12T17:57:59+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355646_-189338142","id":"20160620-190346_2074024414","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h3>1 Traditional add</h3>\n<p>First let us define a small method called &ldquo;add&rdquo;, without using <code>return</code>. Everything will work out fine.</p>\n</div>"},"dateCreated":"2018-11-12T17:55:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25529","user":"anonymous","dateFinished":"2018-11-12T17:57:59+0000","dateStarted":"2018-11-12T17:57:59+0000"},{"text":"def add(n:Int, m:Int): Int = n + m\n\nnumbers.foldLeft(0)(add)","dateUpdated":"2018-11-12T17:55:55+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355647_-189722891","id":"20160620-185917_42615001","result":{"code":"SUCCESS","type":"TEXT","msg":"add: (n: Int, m: Int)Int\nres90: Int = 15\n"},"dateCreated":"2018-11-12T17:55:55+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25530"},{"text":"%md\n### 2 Add with return\nNow let us define another method which will use `return` for the result. Everything still perfetc, so what's the fuss?","dateUpdated":"2018-11-12T17:58:08+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355647_-189722891","id":"20160620-190434_1313311681","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h3>2 Add with return</h3>\n<p>Now let us define another method which will use <code>return</code> for the result. Everything still perfetc, so what&rsquo;s the fuss?</p>\n</div>"},"dateCreated":"2018-11-12T17:55:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25531","user":"anonymous","dateFinished":"2018-11-12T17:58:08+0000","dateStarted":"2018-11-12T17:58:08+0000"},{"text":"def addR(n:Int, m:Int):Int = return n + m\n\nnumbers.foldLeft(0)(addR)","dateUpdated":"2018-11-12T17:55:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355647_-189722891","id":"20160620-190002_1302533179","result":{"code":"SUCCESS","type":"TEXT","msg":"addR: (n: Int, m: Int)Int\nres93: Int = 15\n"},"dateCreated":"2018-11-12T17:55:55+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25532"},{"text":"%md\n### 3 Inlining\nSince everything worked out so far, let's inline the small add (and addR) method into the foldLeft call.","dateUpdated":"2018-11-12T17:58:18+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355648_-105462882","id":"20160620-190543_1959127488","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h3>3 Inlining</h3>\n<p>Since everything worked out so far, let&rsquo;s inline the small add (and addR) method into the foldLeft call.</p>\n</div>"},"dateCreated":"2018-11-12T17:55:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25533","user":"anonymous","dateFinished":"2018-11-12T17:58:18+0000","dateStarted":"2018-11-12T17:58:18+0000"},{"text":"numbers.foldLeft(0)(_ + _)","dateUpdated":"2018-11-12T17:55:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355648_-105462882","id":"20160620-185956_531903700","result":{"code":"SUCCESS","type":"TEXT","msg":"res95: Int = 15\n"},"dateCreated":"2018-11-12T17:55:55+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25534"},{"text":"numbers.foldLeft(0)((x,y) => return x + y)","dateUpdated":"2018-11-12T17:55:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355648_-105462882","id":"20160620-190059_38202717","result":{"code":"ERROR","type":"TEXT","msg":"<console>:31: error: return outside method definition\n              numbers.foldLeft(0)((x,y) => return x + y)\n                                           ^\n"},"dateCreated":"2018-11-12T17:55:55+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25535"},{"text":"%md\n## Huh?\nThat was strange. Ok, let's put everything into a method definition, to make Scala happy. But maybe, we are onto something... Let's see.","dateUpdated":"2018-11-12T17:58:35+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355648_-105462882","id":"20160620-190637_475598278","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h2>Huh?</h2>\n<p>That was strange. Ok, let&rsquo;s put everything into a method definition, to make Scala happy. But maybe, we are onto something&hellip; Let&rsquo;s see.</p>\n</div>"},"dateCreated":"2018-11-12T17:55:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25536","user":"anonymous","dateFinished":"2018-11-12T17:58:35+0000","dateStarted":"2018-11-12T17:58:35+0000"},{"text":"def sum(ns:Iterable[Int]):Int = ns.foldLeft(0)((x,y) => x + y)\n\nsum(numbers)","dateUpdated":"2018-11-12T17:55:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355649_-105847631","id":"20160620-190122_123774119","result":{"code":"SUCCESS","type":"TEXT","msg":"sum: (ns: Iterable[Int])Int\nres104: Int = 170\n"},"dateCreated":"2018-11-12T17:55:55+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25537"},{"text":"def sumR(ns:Iterable[Int]):Int = ns.foldLeft(0)((x,y) => return x + y)\n\nsumR(numbers)","dateUpdated":"2018-11-12T17:55:55+0000","config":{"colWidth":12,"editorMode":"ace/mode/scala","graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355649_-105847631","id":"20160620-190752_1863830951","result":{"code":"SUCCESS","type":"TEXT","msg":"sumR: (ns: Iterable[Int])Int\nres107: Int = 11\n"},"dateCreated":"2018-11-12T17:55:55+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25538"},{"text":"%md\n# WTF ?!?\n\n>\n> A return expression, when evaluated, abandons the current computation and returns to the caller of the method in which return appears.\n>\n\nSee [more tidbits](https://tpolecat.github.io/2014/05/09/return.html)","dateUpdated":"2018-11-12T17:58:39+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355649_-105847631","id":"20160620-190908_781899595","result":{"code":"SUCCESS","type":"HTML","msg":"<div class=\"markdown-body\">\n<h1>WTF ?!?</h1>\n<blockquote>\n  <p>A return expression, when evaluated, abandons the current computation and returns to the caller of the method in which return appears.</p>\n</blockquote>\n<p>See <a href=\"https://tpolecat.github.io/2014/05/09/return.html\">more tidbits</a></p>\n</div>"},"dateCreated":"2018-11-12T17:55:55+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:25539","user":"anonymous","dateFinished":"2018-11-12T17:58:39+0000","dateStarted":"2018-11-12T17:58:39+0000"},{"dateUpdated":"2018-11-12T17:56:10+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1542045355650_-104693384","id":"20160620-190812_982662877","dateCreated":"2018-11-12T17:55:55+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:25540","text":""}],"name":"Scala Introduction - Part X1 - Return Statements","id":"2DU9VUJ2E","angularObjects":{"2DU4EM1QC:shared_process":[],"2DWH63KTX:shared_process":[],"2DTY3NN2K:shared_process":[],"2DTW2RFCG:shared_process":[],"2DUQAGCKJ:shared_process":[],"2DWWDB4VQ:shared_process":[],"2DV7ZN8WX:shared_process":[],"2DWF6XUFU:shared_process":[],"2DVE9GW7A:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}
